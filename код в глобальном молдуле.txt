

Перем scriptCtrl;

Процедура СкриптКонтролИнит(scriptCtrl)  

scriptCtrl = СоздатьОбъект("MSScriptControl.ScriptControl");  

scriptCtrl.Language="jscript";  

код = "  

|  

| function parseJSON(strJSON) {  

| var tmpFunc = (new Function('return('+strJSON+');'))();  

| return(tmpFunc);  

| }  

|  

| // Получить элемент массива  

| function aGet(Array, index) {  

| return(Array[index]);  

| }  

|  

| // Получить ключ пары по индексу  

| function oKey(Obj, index) {  

| var size = 0, key;  

| for (key in Obj) {  

| if (size == index) break;  

| if (Obj.hasOwnProperty(key)) size++;  

| }  

| return(key);  

| }  

|  

| // Получить значение пары по ключу  

| function oValueByKey(Obj, key) {  

| return(Obj[key]);  

| }  

|  

| //Получить количество пар в объекте  

| Object.size = function(obj) {  

| var size = 0, key;  

| for (key in obj) {  

| if (obj.hasOwnProperty(key)) size++;  

| }  

| return(size);  

| }  

|  

| //Получить размер объекта (количество пар в нём)  

| function oSize(Obj) {  

| return(Object.size(Obj));  

| }  

| function utf8_decode (aa) {
	|    var bb = '', c = 0;
	|    for (var i = 0; i < aa.length; i++) {
	|        c = aa.charCodeAt(i);
	|        if (c > 127) {
	|            if (c > 1024) {
	|                if (c == 1025) {
	|                    c = 1016;
	|                } else if (c == 1105) {
	|                    c = 1032;
	|                }
	|                bb += String.fromCharCode(c - 848);
	|            }
	|        } else {
	|            bb += aa.charAt(i);
	|        }
	|    }
	|    return bb;
	|}
	| 

| // Получить тип объекта (number, string, object, array)  

| function eType(Element) {  

| if (Element instanceof Array) {  

| return(""array"");  

| } else if (Object.prototype.toString.call(Element) === '[object Array]') {  

| return(""array"");  

| } else {  

| return(typeof(Element));  

| }  

| }  

|";  

scriptCtrl.AddCode(код);  

КонецПроцедуры  

//*******************************************  

Функция jsonВСписок(obj)  

Если ПустоеЗначение(scriptCtrl)=1 тогда  

СкриптКонтролИнит(scriptCtrl);  

КонецЕсли;  

РезультатРазбора = СоздатьОбъект("СписокЗначений");  

//Сообщить(scriptCtrl.run("oSize", obj)); //Размер объекта (количество пар ключ-значение)  

//Сообщить(scriptCtrl.run("oKey", obj, 1)); //Ключ пары с номером 1  

//Сообщить(scriptCtrl.run("oValueByKey", obj, "id")); //Получить значение объекта по ключу  

//Сообщить(scriptCtrl.run("aGet", obj.products, 0).id); //Получить Элемент массива с индексом 0  

//Сообщить(scriptCtrl.run("eType", obj.products)); //Получить тип объекта, даже если он - массив  

сп = СоздатьОбъект("СписокЗначений");  

ТипОбъекта = scriptCtrl.run("eType", obj);  

Если ТипОбъекта = "object" Тогда  

Для н=0 По scriptCtrl.run("oSize", obj)-1 Цикл  

Ключ = scriptCtrl.run("oKey", obj, н);  

Значение = scriptCtrl.run("oValueByKey", obj, Ключ);  

ТипЗнач = scriptCtrl.run("eType", Значение);  

Если Найти("number, string", ТипЗнач) > 0 Тогда  

сп.ДобавитьЗначение(Значение, Ключ);  
  

ИначеЕсли Найти("object, array", ТипЗнач) > 0 Тогда  

сп.ДобавитьЗначение(jsonВСписок(Значение), Ключ);  
  

КонецЕсли;  

КонецЦикла;  

ИначеЕсли ТипОбъекта = "array" Тогда  

Для н=0 По obj.length-1 Цикл  

Значение = scriptCtrl.run("aGet", obj, н);  

ТипЗнач = scriptCtrl.run("eType", Значение);  

Если Найти("number, string", ТипЗнач) > 0 Тогда  

сп.ДобавитьЗначение(Значение, СокрЛП(Строка(н)));  
  

ИначеЕсли Найти("object, array", ТипЗнач) > 0 Тогда  

сп.ДобавитьЗначение(jsonВСписок(Значение), СокрЛП(Строка(н)));  
  

КонецЕсли;  

КонецЦикла;  

КонецЕсли;  

Возврат сп;  

КонецФункции //jsonВСписок(obj)  

//*********************************************************************************  

Функция глРазборJSON(Знач Стр) Экспорт //На входе строка в текущей системной кодировке  

Если ПустоеЗначение(scriptCtrl)=1 тогда  

СкриптКонтролИнит(scriptCtrl);  

КонецЕсли;  

Рез = scriptCtrl.run("parseJSON", стр ); //Работает  

сп = jsonВСписок(Рез);  

Возврат сп;  

КонецФункции //глРазборJSON(Знач Стр)  

 
Процедура Test(стр) Экспорт 
	// СкриптКонтролИнит(scriptCtrl);
	// Рез = scriptCtrl.run("parseJSON", стр); 
	// сп = jsonВСписок(Рез);
	//	Док = СоздатьОбъект("Документ.ААААА");
	//	Док.Новый();
	//	Док.УстановитьАтрибут("АА", сп.Получить("Автомобиль"));
	//Док.Записать();
	СкриптКонтролИнит(scriptCtrl);
	Рез = scriptCtrl.run("parseJSON", стр ); 
	сп = jsonВСписок(Рез);
	Док = СоздатьОбъект("Документ.ю03_РасходнаяНакладнаяОбщепит");	
	Док.Новый();
	Доки = СоздатьОбъект("Документ.ю03_РасходнаяНакладнаяОбщепит");
	Доки.ОбратныйПорядок(1); 
	Доки.ВыбратьДокументы();
	Если Доки.ПолучитьДокумент() = 1 Тогда  
		Док.УстановитьАтрибут("НомерДок", Число(Доки.НомерДок)+ 1);
	Иначе
		Док.УстановитьАтрибут("НомерДокумента", 1);
	КонецЕсли;

    Док.УстановитьАтрибут("НомерДокРозницы", сп.Получить("НомерДокумента"));
	Док.УстановитьАтрибут("Автомобиль", сп.Получить("Автомобиль"));
	Док.УстановитьАтрибут("Основание", сп.Получить("Основание"));
	
	Док.УстановитьАтрибут("НомерЭлНакл", сп.Получить("НомерЭлектроннойНакладной"));
//	Док.УстановитьАтрибут("СтавкаНДСШ", сп.Получить("НомерЭлектроннойНакладной")); 
	Док.УстановитьАтрибут("Экспедитор", сп.Получить("Экспедитор"));
	Док.УстановитьАтрибут("СерияБланка", сп.Получить("КодБланка"));
	Док.УстановитьАтрибут("Прицеп", сп.Получить("Прицеп"));
	Док.УстановитьАтрибут("ДовДата", Дата(сп.Получить("ДоверенностьДата")));
	Док.УстановитьАтрибут("ДовНом", сп.Получить("ДоверенностьНомер"));
	Док.УстановитьАтрибут("ДовФИО", сп.Получить("ДоверенностьЛицо"));
	
	
	
	ДокТЧ = СоздатьОбъект("ТаблицаЗначений");
	ДокТЧ.НоваяКолонка("Количество", "Число");
	ДокТЧ.НоваяКолонка("КолУпак", "Число");
	ДокТЧ.НоваяКолонка("Цена", "Число");
	ДокТЧ.НоваяКолонка("Сумма", "Число");
	
	Индекс = 1;  
	Пока Индекс - 1 < сп.Получить("Товары").РазмерСписка() Цикл
		стр = ДокТЧ.НоваяСтрока();
		ДокТЧ.Количество = 	сп.Получить("Товары").ПолучитьЗначение(Индекс).Получить("Количество");
		ДокТЧ.КолУпак = 	сп.Получить("Товары").ПолучитьЗначение(Индекс).Получить("КоличествоУпаковок");
		ДокТЧ.Цена = 	сп.Получить("Товары").ПолучитьЗначение(Индекс).Получить("Цена");
		ДокТЧ.Сумма = 	сп.Получить("Товары").ПолучитьЗначение(Индекс).Получить("Сумма");
		Индекс = Индекс + 1;
	КонецЦикла;
	Док.ЗагрузитьТабличнуюЧасть(ДокТЧ); 
	
	
	Контр = СоздатьОбъект("Справочник.Контрагенты");
	Если Контр.НайтиПоНаименованию(сп.Получить("Контрагент").Получить("Наименование")) = 1 Тогда
		Док.УстановитьАтрибут("Контрагент", Контр.ТекущийЭлемент());	
	Иначе
		Контр.Новый();
		Контр.УстановитьАтрибут("Наименование", сп.Получить("Контрагент").Получить("Наименование"));
		Контр.УстановитьАтрибут("ПолнНаименование", сп.Получить("Контрагент").Получить("НаименованиеПолное"));
		Контр.УстановитьАтрибут("КПП", сп.Получить("Контрагент").Получить("КПП"));
		Контр.УстановитьАтрибут("ОКПО", сп.Получить("Контрагент").Получить("КодПоОКПО"));
		Контр.Записать();
		Док.УстановитьАтрибут("Контрагент", Контр.ТекущийЭлемент());
	КонецЕсли;		

   
	Док.Записать();	
	  
КонецПроцедуры
