HTTPСоединение = Новый HTTPСоединение(
        "192.168.201.39", // сервер (хост)
        1500, // порт, по умолчанию для http используется 80, для https 443
        , // пользователь для доступа к серверу (если он есть)
        , // пароль для доступа к серверу (если он есть)
        , // здесь указывается прокси, если он есть
        , // таймаут в секундах, 0 или пусто - не устанавливать
      
    );

 HTTPЗапрос = Новый HTTPЗапрос("/todoitems/UN_JSON_"); 
 HTTPЗапрос.Заголовки.Вставить("Content-type", "application/json; charset=utf-8");
 
 Данные = Новый Структура();
 ДокументСсылка = Объект.Ссылка;
    ГУИДССЫЛКИ = ДокументСсылка.УникальныйИдентификатор();
 
 КонтрагентСсылка = Объект.Контрагент;
 УИДКонтрагент = КонтрагентСсылка.УникальныйИдентификатор();
 
 Если Объект.Контрагент <> Неопределено Тогда
  Контрагент = Новый Структура();
  Контрагент.Вставить("ВидОбъекта", "Контрагенты");
  Контрагент.Вставить("Наименование", Объект.Контрагент.Наименование);
  Контрагент.Вставить("НаименованиеПолное", Объект.Контрагент.НаименованиеПолное);
  Контрагент.Вставить("КПП", Объект.Контрагент.КПП);
  Контрагент.Вставить("КодПоОКПО", Объект.Контрагент.КодПоОКПО);
  //НомерТелефона
Если Объект.Контрагент.ПолучитьОбъект().КонтактнаяИнформация.Количество() > 1 Тогда
	Сч = 0;
	Пока Сч < Объект.Контрагент.ПолучитьОбъект().КонтактнаяИнформация.Количество() Цикл
		Если Объект.Контрагент.ПолучитьОбъект().КонтактнаяИнформация.Получить(Сч).НомерТелефона = "" Тогда
			Сч = Сч + 1;
			Продолжить;
		Иначе
			Контрагент.Вставить("НомерТелефона", Объект.Контрагент.ПолучитьОбъект().КонтактнаяИнформация.Получить(Сч).НомерТелефона);
			Сч = 0;
			Прервать;
		КонецЕсли;
	КонецЦикла; 
	
		Пока Сч < Объект.Контрагент.ПолучитьОбъект().КонтактнаяИнформация.Количество() Цикл
		Если Объект.Контрагент.ПолучитьОбъект().КонтактнаяИнформация.Получить(Сч).НомерТелефонаБезКодов = "" Тогда
			Сч = Сч + 1;
			Продолжить;
		Иначе
			Контрагент.Вставить("НомерТелефонаБезКодов", Объект.Контрагент.ПолучитьОбъект().КонтактнаяИнформация.Получить(Сч).НомерТелефонаБезКодов);
			Сч = 0;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Пока Сч < Объект.Контрагент.ПолучитьОбъект().КонтактнаяИнформация.Количество() Цикл
		Если Объект.Контрагент.ПолучитьОбъект().КонтактнаяИнформация.Получить(Сч).Город = "" Тогда
			Сч = Сч + 1;
			Продолжить;
		Иначе
			Контрагент.Вставить("Город", Объект.Контрагент.ПолучитьОбъект().КонтактнаяИнформация.Получить(Сч).Город);
			Сч = 0;
			Прервать;
		КонецЕсли;
	КонецЦикла;

	Пока Сч < Объект.Контрагент.ПолучитьОбъект().КонтактнаяИнформация.Количество() Цикл
		Если Объект.Контрагент.ПолучитьОбъект().КонтактнаяИнформация.Получить(Сч).АдресЭП = "" Тогда
			Сч = Сч + 1;
			Продолжить;
		Иначе
			Контрагент.Вставить("АдресЭП", Объект.Контрагент.ПолучитьОбъект().КонтактнаяИнформация.Получить(Сч).АдресЭП);
			Сч = 0;
			Прервать;
		КонецЕсли;
	КонецЦикла;

КонецЕсли;

   
  Данные.Вставить("Контрагент_UID", Строка(УИДКонтрагент));
  Данные.Вставить("Контрагент", Контрагент);
    КонецЕсли;
 
 Если Объект.Заказчик <> Неопределено Тогда
  ЗаказчикСсылка = Объект.Заказчик;
  УИДЗаказчик = ЗаказчикСсылка.УникальныйИдентификатор();
  Заказчик = Новый Структура();
   
  Заказчик.Вставить("ВидОбъекта", "Контрагенты");
  Заказчик.Вставить("Наименование", Объект.Заказчик.Наименование);
  Заказчик.Вставить("НаименованиеПолное", Объект.Заказчик.НаименованиеПолное);
  Заказчик.Вставить("КПП", Объект.Заказчик.КПП);
  Заказчик.Вставить("КодПоОКПО", Объект.Заказчик.КодПоОКПО);
  Если Объект.Заказчик.ПолучитьОбъект().КонтактнаяИнформация.Количество() > 1 Тогда  
  	Сч = 0;
	Пока Сч < Объект.Заказчик.ПолучитьОбъект().КонтактнаяИнформация.Количество() Цикл
		Если Объект.Заказчик.ПолучитьОбъект().КонтактнаяИнформация.Получить(Сч).НомерТелефона = "" Тогда
			Сч = Сч + 1;
			Продолжить;
		Иначе
			Заказчик.Вставить("НомерТелефона", Объект.Заказчик.ПолучитьОбъект().КонтактнаяИнформация.Получить(Сч).НомерТелефона);
			Сч = 0;
			Прервать;
		КонецЕсли;
	КонецЦикла; 
	
		Пока Сч < Объект.Заказчик.ПолучитьОбъект().КонтактнаяИнформация.Количество() Цикл
		Если Объект.Заказчик.ПолучитьОбъект().КонтактнаяИнформация.Получить(Сч).НомерТелефонаБезКодов = "" Тогда
			Сч = Сч + 1;
			Продолжить;
		Иначе
			Заказчик.Вставить("НомерТелефонаБезКодов", Объект.Заказчик.ПолучитьОбъект().КонтактнаяИнформация.Получить(Сч).НомерТелефонаБезКодов);
			Сч = 0;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Пока Сч < Объект.Заказчик.ПолучитьОбъект().КонтактнаяИнформация.Количество() Цикл
		Если Объект.Заказчик.ПолучитьОбъект().КонтактнаяИнформация.Получить(Сч).Город = "" Тогда
			Сч = Сч + 1;
			Продолжить;
		Иначе
			Заказчик.Вставить("Город", Объект.Заказчик.ПолучитьОбъект().КонтактнаяИнформация.Получить(Сч).Город);
			Сч = 0;
			Прервать;
		КонецЕсли;
	КонецЦикла;

	Пока Сч < Объект.Заказчик.ПолучитьОбъект().КонтактнаяИнформация.Количество() Цикл
		Если Объект.Заказчик.ПолучитьОбъект().КонтактнаяИнформация.Получить(Сч).АдресЭП = Неопределено Тогда
			Сч = Сч + 1;
			Продолжить;
		Иначе
			Заказчик.Вставить("АдресЭП", Объект.Заказчик.ПолучитьОбъект().КонтактнаяИнформация.Получить(Сч).АдресЭП);
			Сч = 0;
			Прервать;
		КонецЕсли;
	КонецЦикла;

	Если ТипЗнч(Объект.Заказчик) = Тип("СправочникСсылка.Организации") Тогда
		Заказчик.Вставить("Удалить_GLN", Объект.Заказчик.УдалитьGLN);
		//Заказчик.Вставить("ДокументСерия", Лев(Объект.Заказчик.СвидетельствоСерияНомер, 14));
		//Заказчик.Вставить("ДокументНомер", Прав(Объект.Заказчик.СвидетельствоСерияНомер, СтрДлина(Объект.Заказчик.СвидетельствоСерияНомер) - 14));
		//Заказчик.Вставить("СвидетельствоДатаВыдачи", Строка(Объект.Заказчик.СвидетельствоДатаВыдачи));
	КонецЕсли;
 КонецЕсли;

  Данные.Вставить("Заказчик_UID", Строка(УИДЗаказчик));
  Данные.Вставить("Заказчик", Заказчик);
 КонецЕсли;
 
 
     
 Если Объект.БанковскийСчетГрузополучателя <> Неопределено Тогда
  БанковскийСчетГрузополучателяСсылка = Объект.БанковскийСчетГрузополучателя.Ссылка;
  УИДБанковскийСчетГрузополучателяСсылка = БанковскийСчетГрузополучателяСсылка.УникальныйИдентификатор();
     БанковскийСчетГрузополучателя = Новый Структура();
  БанковскийСчетГрузополучателя.Вставить("ВидОбъекта", "РасчетныеСчета");
  БанковскийСчетГрузополучателя.Вставить("ГородБанка", Объект.БанковскийСчетГрузополучателя.ГородБанка);
  БанковскийСчетГрузополучателя.Вставить("БикБанка", Объект.БанковскийСчетГрузополучателя.БИКБанка);
  БанковскийСчетГрузополучателя.Вставить("НомерСчета", Объект.БанковскийСчетГрузополучателя.НомерСчета); 
  БанковскийСчетГрузополучателя.Вставить("КоррСчетБанка", Объект.БанковскийСчетГрузополучателя.КоррСчетБанка);
  
  Данные.Вставить("БанковскийСчетГрузополучателя_UID", Строка(УИДБанковскийСчетГрузополучателяСсылка));
  Данные.Вставить("БанковскийСчетГрузополучателя", БанковскийСчетГрузополучателя); 
КонецЕсли;

Если Объект.Склад <> Неопределено Тогда
  СкладСсылка = Объект.Склад;
  УИДСклад = СкладСсылка.УникальныйИдентификатор();
  
  Склад = Новый Структура();
  Склад.Вставить("ВидОбъекта", "МестаХранения");
  //Склад.Вставить("Организация", Организация);
  Склад.Вставить("Наименование", Объект.Склад.Наименование);
  Данные.Вставить("Склад_UID", Строка(УИДСклад));
  Данные.Вставить("Склад", Склад); 
 КонецЕсли; 
 ТабличнаяЧасть = Новый Массив();
 Сч = 0;
 Пока Сч < Объект.Товары.Количество() Цикл
  СтрокаТЧ = Новый Структура();
     СтрокаТаблицы = Объект.Товары.Получить(Сч);
  УИДТовар = СтрокаТаблицы.Номенклатура.УникальныйИдентификатор();
     Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
         Сч = Сч + 1;
         Продолжить;
  КонецЕсли;
  Товар = Новый Структура();      
    Товар.Вставить("ВидОбъекта", "ю03_" + СтрокаТаблицы.Номенклатура.ПолучитьОбъект().ВидНоменклатуры.ПолучитьОбъект().Наименование);
  Товар.Вставить("Наименование", СтрокаТаблицы.Номенклатура.ПолучитьОбъект().Наименование);
  Товар.Вставить("ВидТовара", СтрокаТаблицы.Номенклатура.ПолучитьОбъект().ВидНоменклатуры.ПолучитьОбъект().Наименование);

        
     СтрокаТЧ.Вставить("Количество", СтрокаТаблицы.Количество);
  СтрокаТЧ.Вставить("КоличествоУпаковок", СтрокаТаблицы.КоличествоУпаковок);
  СтрокаТЧ.Вставить("Цена", СтрокаТаблицы.Цена);
  СтрокаТЧ.Вставить("Сумма", СтрокаТаблицы.Сумма);
  СтрокаТЧ.Вставить("СтавкаНДС", Строка(СтрокаТаблицы.СтавкаНДС));
  СтрокаТЧ.Вставить("СуммаНДС", СтрокаТаблицы.СуммаНДС);
  СтрокаТЧ.Вставить("ПроцентАвтоматизированнойСкидки", СтрокаТаблицы.ПроцентАвтоматическойСкидки);
  СтрокаТЧ.Вставить("ПроцентРучнойСкидки", СтрокаТаблицы.ПроцентРучнойСкидки);
  СтрокаТЧ.Вставить("СуммаАвтоматизированнойСкидки", СтрокаТаблицы.СуммаАвтоматическойСкидки);
  СтрокаТЧ.Вставить("СуммаРучнойСкидки", СтрокаТаблицы.СуммаРучнойСкидки);
  СтрокаТЧ.Вставить("Товар_UID", Строка(УИДТовар));
  СтрокаТЧ.Вставить("Товар", Товар);
  
  ТабличнаяЧасть.Добавить(СтрокаТЧ);
     Сч = Сч + 1;
 КонецЦикла;
                          
 
 Данные.Вставить("ВидОбъекта", "Документ.ю03_РасходнаяНакладнаяОбщепит");
 Данные.Вставить("GUID_Retail", Строка(ГУИДССЫЛКИ)); 
 Данные.Вставить("Номер", Объект.Номер);
 Данные.Вставить("Погрузка", Объект.Погрузка); 
 Данные.Вставить("НомерЭлектроннойНакладной", Объект.НомерЭлектроннойНакладной);
 Данные.Вставить("КодБланка", Объект.КодБланка);   
 
 
 Данные.Вставить("ТипБСО", Объект.ТипБСО);
 Данные.Вставить("НомерБСО", Объект.НомерБСО);
 Данные.Вставить("ТипБСО", Объект.ТипБСО);

 
 Данные.Вставить("ДоверенностьДата", Строка(Объект.ДоверенностьДата));
 Данные.Вставить("ДоверенностьЛицо", Объект.ДоверенностьЛицо);
 Данные.Вставить("ДоверенностьНомер", Объект.ДоверенностьНомер);
 Данные.Вставить("Автомобиль", Объект.Автомобиль);
 Данные.Вставить("Экспедитор", Объект.Экспедитор);  
 Данные.Вставить("ДатаПрибытияПогрузка", Строка(Объект.ДатаПрибытияПогрузка));
 Данные.Вставить("ПереданыДокументы", Объект.ПереданыДокументы);
 Данные.Вставить("ПутевойЛист", Объект.ПутевойЛист);
  
 Данные.Вставить("ТабличнаяЧасть", ТабличнаяЧасть);
 

 

 ЗаписьJSON = Новый ЗаписьJSON;            
 ЗаписьJSON.УстановитьСтроку();
 ЗаписатьJSON(ЗаписьJSON, Данные);            
 ТелоЗапроса = ЗаписьJSON.Закрыть();
 
 
 HTTPЗапрос.УстановитьТелоИзСтроки(ТелоЗапроса);
 Ответ = HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);   

 Сообщить("Код результата: " + Ответ.КодСостояния);
 Сообщить("Ответ: " + Ответ.ПолучитьТелоКакСтроку("UTF-8"));


Процедура Выполнить() Экспорт 
Стр = "{
|  ""ВидОбъекта"": ""Документ.ю03_РасходнаяНакладнаяОбщепит"",
 | ""GUID_Retail"": ""65147aa6-f277-11ef-8f96-74563cad6ff7"",
 | ""НомерЭлНакл"": """",
 | ""Прицеп"": null,
 | ""ПереданыДокументы"": ""ааа"",
 | ""ПутевойЛист"": ""ааа"",
 | ""ДовДата"": ""11.02.2025 0:00:00"",
 | ""ДовНом"": ""12332312"",
 | ""ДовФИО"": ""ааа"",
 | ""СерияБланка"": ""ааа"",
 | ""ТипБСО"": ""ааа"",
 | ""НомерБСО"": ""ааа"",
 | ""СерияБСО"": null,
 | ""Основание"": null,
 | ""ТабличнаяЧасть"": [
 |   {
 |     ""Товар_UID"": ""5cee1d72-ee91-11ef-8f93-74563cad6ff7"",
 |     ""Товар"": {
 |       ""Наименование"": ""Товар1"",
 |       ""ВидОбъекта"": ""ю03_Продукты"",
 |       ""ВидТовара"": ""Продукт""
 |     },
 |     ""Количество"": 0.0,
 |     ""КолУпак"": 2.0,
 |     ""Цена"": 55.0,
 |     ""СтавкаНДС"": ""Без НДС"",
 |     ""Сумма"": 110.0,
 |     ""СуммаАвтоматическойСкидки"": 0.0,
 |     ""СуммаРучнойСкидки"": 0.0,
 |     ""ПроцентАвтоматическойСкидки"": 0.0,
 |     ""ПроцентРучнойСкидки"": 0.0,
 |     ""СуммаСкидки"": 0.0,
 |     ""ПроцентСкидки"": 0.0
 |   },
 |   {
 |     ""Товар_UID"": ""6e088fdb-eea3-11ef-8f93-74563cad6ff7"",
 |     ""Товар"": {
 |       ""Наименование"": ""Товар2"",
 |       ""ВидОбъекта"": ""ю03_Продукты"",
 | ""ВидТовара"": ""Продукт""
 |     },
 |     ""Количество"": 0.0,
 |     ""КолУпак"": 3.0,
 |     ""Цена"": 12.0,
 |     ""СтавкаНДС"": ""20%"",
 |     ""Сумма"": 36.0,
 |     ""СуммаАвтоматическойСкидки"": 0.0,
 |     ""СуммаРучнойСкидки"": 0.0,
 |     ""ПроцентАвтоматическойСкидки"": 0.0,
 |     ""ПроцентРучнойСкидки"": 0.0,
 |     ""СуммаСкидки"": 0.0,
 |     ""ПроцентСкидки"": 0.0
 |   },
 |   {
 |     ""Товар_UID"": ""6e088fe6-eea3-11ef-8f93-74563cad6ff7"",
 |     ""Товар"": {
 |       ""Наименование"": ""Товар3"",
 |       ""ВидОбъекта"": ""ю03_Блюда"",
 | ""ВидТовара"": ""Блюдо""
 |     },
 |     ""Количество"": 0.0,
 |     ""КолУпак"": 4.0,
 |     ""Цена"": 2.0,
 |     ""СтавкаНДС"": ""Без НДС"",
 |     ""Сумма"": 8.0,
 |     ""СуммаАвтоматическойСкидки"": 0.0,
 |     ""СуммаРучнойСкидки"": 0.0,
 |     ""ПроцентАвтоматическойСкидки"": 0.0,
 |     ""ПроцентРучнойСкидки"": 0.0,
 |     ""СуммаСкидки"": 0.0,
 |     ""ПроцентСкидки"": 0.0
 |   }
 | ],
 | ""Контрагент_UID"": ""5cee1d67-ee91-11ef-8f93-74563cad6ff7"",
 | ""Контрагент"": {
 |   ""Наименование"": ""Марко"",
 |   ""ВидОбъекта"": ""Контрагенты"",
 |   ""ПолнНаименование"": ""Марко"",
 |   ""КПП"": """",
 |   ""ОКПО"": """",
 |   ""НомерТелефона"": null
 | },
 | ""Автомобиль"": ""ааа"",
 | ""флЭлНакл"": 0,
 | ""НомерДокРозницы"": ""0000-000006"",
 | ""Погрузка"": ""Грузоотправитель"",
 | ""Заказчик_UID"": ""5cee1d67-ee91-11ef-8f93-74563cad6ff7"",
 | ""Заказчик"": {
 |   ""Наименование"": ""Марко"",
 |   ""ВидОбъекта"": ""Контрагенты"",
 |   ""ПолнНаименование"": ""Марко"",
 |   ""КПП"": """",
 |   ""ОКПО"": """"
 | },
 | ""Экспедитор"": ""ааа"",
 | ""МестоХранения_UID"": ""5cee1d6d-ee91-11ef-8f93-74563cad6ff7"",
 | ""МестоХранения"": {
 |   ""Наименование"": ""Склад 1"",
 |   ""ВидОбъекта"": ""МестаХранения""
 | },
 | ""ДатаПрибытияП"": ""04.03.2025 0:00:00"",
 | ""СчетПолучателя_UID"": ""0c94409e-fa66-11ef-8fa3-74563cad6ff7"",
 | ""СчетПолучателя"": {
 |   ""Наименование"": null,
 |   ""ВидОбъекта"": ""РасчетныеСчета"",
 |   ""ГородБанка"": "" "",
 |   ""КодБанка"": "" "",
 |   ""РасчетныйСчет"": ""4534534534543535353453346790"",
 |   ""РасчетныйСчетКорр"": "" ""
 | }
|}";
сп = СоздатьОбъект("СписокЗначений");
сп.Установить("PostObject", Стр);
ОткрытьФорму("Отчет", сп, "D:\wor\ser (3)\ser\TodoApi\test.ert");

 
 
КонецПроцедуры